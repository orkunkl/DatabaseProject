2017-02-01 19:34:34,836 [INFO] from application in ForkJoinPool-1-worker-1 - ApplicationTimer demo: Starting application at 2017-02-01T18:34:34.835Z.
2017-02-01 19:34:35,179 [INFO] from play.api.Play in ForkJoinPool-1-worker-1 - Application started (Dev)
2017-02-01 19:34:35,213 [DEBUG] from application in application-akka.actor.default-dispatcher-4 - landing
2017-02-01 19:34:36,455 [ERROR] from application in application-akka.actor.default-dispatcher-4 - 

! @7307d4jg9 - Internal server error, for (GET) [/] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[SQLTransientConnectionException: db - Connection is not available, request timed out after 1000ms.]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:293)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:220)
	at play.api.GlobalSettings$class.onError(GlobalSettings.scala:160)
	at play.api.DefaultGlobal$.onError(GlobalSettings.scala:188)
	at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.scala:100)
	at play.core.server.netty.PlayRequestHandler$$anonfun$2$$anonfun$apply$1.applyOrElse(PlayRequestHandler.scala:100)
	at play.core.server.netty.PlayRequestHandler$$anonfun$2$$anonfun$apply$1.applyOrElse(PlayRequestHandler.scala:99)
	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:344)
	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:343)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:40)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:248)
	at scala.concurrent.Promise$class.complete(Promise.scala:55)
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:153)
	at scala.concurrent.Future$$anonfun$recoverWith$1$$anonfun$apply$6.apply(Future.scala:344)
	at scala.concurrent.Future$$anonfun$recoverWith$1$$anonfun$apply$6.apply(Future.scala:344)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.BatchingExecutor$Batch$$anonfun$run$1.processBatch$1(BatchingExecutor.scala:63)
	at scala.concurrent.BatchingExecutor$Batch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:78)
	at scala.concurrent.BatchingExecutor$Batch$$anonfun$run$1.apply(BatchingExecutor.scala:55)
	at scala.concurrent.BatchingExecutor$Batch$$anonfun$run$1.apply(BatchingExecutor.scala:55)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at scala.concurrent.BatchingExecutor$Batch.run(BatchingExecutor.scala:54)
	at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:599)
	at scala.concurrent.BatchingExecutor$class.execute(BatchingExecutor.scala:106)
	at scala.concurrent.Future$InternalCallbackExecutor$.execute(Future.scala:597)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:40)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:248)
	at scala.concurrent.Promise$class.complete(Promise.scala:55)
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:153)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:235)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:235)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.sql.SQLTransientConnectionException: db - Connection is not available, request timed out after 1000ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:548)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:145)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:83)
	at slick.jdbc.hikaricp.HikariCPJdbcDataSource.createConnection(HikariCPJdbcDataSource.scala:12)
	at slick.jdbc.JdbcBackend$BaseSession.conn$lzycompute(JdbcBackend.scala:415)
	at slick.jdbc.JdbcBackend$BaseSession.conn(JdbcBackend.scala:414)
	at slick.jdbc.JdbcBackend$SessionDef$class.prepareStatement(JdbcBackend.scala:297)
	at slick.jdbc.JdbcBackend$BaseSession.prepareStatement(JdbcBackend.scala:407)
	at slick.jdbc.StatementInvoker.results(StatementInvoker.scala:33)
	at slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)
	at slick.jdbc.Invoker$class.foreach(Invoker.scala:48)
	at slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)
	at slick.jdbc.StreamingInvokerAction$class.run(StreamingInvokerAction.scala:22)
	at slick.driver.JdbcActionComponent$QueryActionExtensionMethodsImpl$$anon$1.run(JdbcActionComponent.scala:218)
	at slick.driver.JdbcActionComponent$QueryActionExtensionMethodsImpl$$anon$1.run(JdbcActionComponent.scala:218)
	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237)
	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-02-01 19:34:39,110 [DEBUG] from application in application-akka.actor.default-dispatcher-3 - landing
2017-02-01 19:34:48,856 [DEBUG] from application in application-akka.actor.default-dispatcher-3 - landing
2017-02-01 19:34:50,547 [DEBUG] from application in application-akka.actor.default-dispatcher-5 - landing
2017-02-01 19:35:00,552 [DEBUG] from application in application-akka.actor.default-dispatcher-25 - landing
2017-02-01 19:35:01,837 [DEBUG] from application in application-akka.actor.default-dispatcher-23 - landing
2017-02-01 19:35:08,356 [DEBUG] from application in application-akka.actor.default-dispatcher-22 - landing
2017-02-01 19:40:06,216 [DEBUG] from application in application-akka.actor.default-dispatcher-30 - landing
2017-02-01 19:47:20,065 [INFO] from application in application-akka.actor.default-dispatcher-34 - ApplicationTimer demo: Stopping application at 2017-02-01T18:47:20.065Z after 766s.
2017-02-01 19:47:20,245 [INFO] from application in application-akka.actor.default-dispatcher-34 - ApplicationTimer demo: Starting application at 2017-02-01T18:47:20.244Z.
2017-02-01 19:47:20,350 [INFO] from play.api.Play in application-akka.actor.default-dispatcher-34 - Application started (Dev)
2017-02-01 19:47:20,354 [DEBUG] from application in application-akka.actor.default-dispatcher-3 - landing
2017-02-01 19:47:22,444 [DEBUG] from application in application-akka.actor.default-dispatcher-7 - landing
2017-02-01 19:47:23,024 [DEBUG] from application in application-akka.actor.default-dispatcher-6 - landing
2017-02-01 19:47:23,317 [DEBUG] from application in application-akka.actor.default-dispatcher-4 - landing
